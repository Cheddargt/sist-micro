


ARM Macro Assembler    Page 1 


    1 00000000         ; Exemplo.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 12/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Área de Dados - Declarações de variáveis
   13 00000000                 AREA             DATA, ALIGN=2
   14 00000000         ; Se alguma variável for chamada em outro arquivo
   15 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   16 00000000         ; partir de outro arquivo
   17 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   18 00000000         ; de <tam> bytes a partir da primeira 
   19 00000000         ; posição da RAM  
   20 00000000         
   21 00000000         ; ------------------------------------------------------
                       -------------------------
   22 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   23 00000000         ;                  código
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000         
   26 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   27 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   28 00000000         ; outro arquivo. No caso startup.s
   29 00000000         
   30 00000000         ; Se chamar alguma função externa 
   31 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   32 00000000         ; função <func>
   33 00000000         
   34 00000000         ; ------------------------------------------------------
                       -------------------------
   35 00000000         ; Função main()
   36 00000000         Start
   37 00000000         ; Comece o código aqui <================================
                       ======================
   38 00000000 F240 21BD       MOV              R1,#701
   39 00000004 0949            LSRS             R1,R1,#5
   40 00000006 F647 5243       MOV              R2,#32067
   41 0000000A F1C2 0200       NEG              R2,R2
   42 0000000E 0912            LSRS             R2,R2,#4
   43 00000010 F240 23BD       MOV              R3,#701
   44 00000014 08DB            LSRS             R3,R3,#3



ARM Macro Assembler    Page 2 


   45 00000016 F647 5243       MOV              R2,#32067
   46 0000001A F1C2 0200       NEG              R2,R2
   47 0000001E 0952            LSRS             R2,R2,#5
   48 00000020 F04F 04FF       MOV              R4,#255
   49 00000024 0224            LSLS             R4,R4,#8
   50 00000026 F24E 6566       MOV              R5,#58982
   51 0000002A F1C5 0500       NEG              R5,R5
   52 0000002E 04AD            LSLS             R5,R5,#18
   53 00000030         
   54 00000030 F241 2634       MOV              R6,#0x1234
   55 00000034 F6CF 26BC       MOVT             R6,#0xFABC
   56 00000038 EA4F 26B6       ROR              R6,#10
   57 0000003C F244 3721       MOV              R7,#0x4321
   58 00000040 EA5F 0737       RRXS             R7,R7
   59 00000044 EA5F 0737       RRXS             R7,R7
   60 00000048         
   61 00000048 BF00            NOP
   62 0000004A         
   63 0000004A 00 00           ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
   64 0000004C                 END                          ; fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\exemplo.d -o.\exemplo.o -IC:\Users\Raissa\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 534" --predefine="TM4C1294NCPDT SETA 1" --l
ist=.\exemplo.lst exemplo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 13 in file exemplo.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file exemplo.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 36 in file exemplo.s
   Uses
      At line 27 in file exemplo.s
Comment: Start used once
2 symbols
337 symbols in table
