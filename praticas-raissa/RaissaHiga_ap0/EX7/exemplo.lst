


ARM Macro Assembler    Page 1 


    1 00000000         ; Exemplo.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 12/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Área de Dados - Declarações de variáveis
   13 00000000                 AREA             DATA, ALIGN=2
   14 00000000         ; Se alguma variável for chamada em outro arquivo
   15 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   16 00000000         ; partir de outro arquivo
   17 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   18 00000000         ; de <tam> bytes a partir da primeira 
   19 00000000         ; posição da RAM  
   20 00000000         
   21 00000000         ; ------------------------------------------------------
                       -------------------------
   22 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   23 00000000         ;                  código
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000         
   26 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   27 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   28 00000000         ; outro arquivo. No caso startup.s
   29 00000000         
   30 00000000         ; Se chamar alguma função externa 
   31 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   32 00000000         ; função <func>
   33 00000000         
   34 00000000         ; ------------------------------------------------------
                       -------------------------
   35 00000000         ; Função main()
   36 00000000         Start
   37 00000000         ; Comece o código aqui <================================
                       ======================
   38 00000000 F04F 000A       MOV              R0,#10
   39 00000004         pula
   40 00000004 F100 0005       ADD              R0,R0,#5
   41 00000008 2832            CMP              R0,#50
   42 0000000A D1FB            BNE              pula
   43 0000000C F000 F802       BL               func
   44 00000010 BF00            NOP



ARM Macro Assembler    Page 2 


   45 00000012 E7FE    fim     B                fim
   46 00000014         func
   47 00000014 4601            MOV              R1,R0
   48 00000016 2932            CMP              R1,#50
   49 00000018 BF34            ITE              CC
   50 0000001A 1C49            ADDCC            R1,R1,#1
   51 0000001C F06F 0131       MOVCS            R1,#-50
   52 00000020 4770            BX               LR
   53 00000022         
   54 00000022         
   55 00000022 BF00            NOP
   56 00000024                 ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
   57 00000024                 END                          ; fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\exemplo.d -o.\exemplo.o -IC:\Users\Raissa\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 534" --predefine="TM4C1294NCPDT SETA 1" --l
ist=.\exemplo.lst exemplo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 13 in file exemplo.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file exemplo.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 36 in file exemplo.s
   Uses
      At line 27 in file exemplo.s
Comment: Start used once
fim 00000012

Symbol: fim
   Definitions
      At line 45 in file exemplo.s
   Uses
      At line 45 in file exemplo.s
Comment: fim used once
func 00000014

Symbol: func
   Definitions
      At line 46 in file exemplo.s
   Uses
      At line 43 in file exemplo.s
Comment: func used once
pula 00000004

Symbol: pula
   Definitions
      At line 39 in file exemplo.s
   Uses
      At line 42 in file exemplo.s
Comment: pula used once
5 symbols
340 symbols in table
