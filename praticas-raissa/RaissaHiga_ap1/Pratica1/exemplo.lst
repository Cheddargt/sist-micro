


ARM Macro Assembler    Page 1 


    1 00000000         ; Exemplo.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 12/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000 20000400 
                       vet_random
                               EQU              0x20000400
   12 00000000 20000500 
                       vet_sort
                               EQU              0x20000500
   13 00000000         ; ------------------------------------------------------
                       -------------------------
   14 00000000         ; Área de Dados - Declarações de variáveis
   15 00000000                 AREA             DATA, ALIGN=2
   16 00000000         ; Se alguma variável for chamada em outro arquivo
   17 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   18 00000000         ; partir de outro arquivo
   19 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   20 00000000         ; de <tam> bytes a partir da primeira 
   21 00000000         ; posição da RAM  
   22 00000000         
   23 00000000         ; ------------------------------------------------------
                       -------------------------
   24 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   25 00000000         ;                  código
   26 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   27 00000000         
   28 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   29 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   30 00000000         ; outro arquivo. No caso startup.s
   31 00000000         
   32 00000000         ; Se chamar alguma função externa 
   33 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   34 00000000         ; função <func>
   35 00000000         
   36 00000000         ; ------------------------------------------------------
                       -------------------------
   37 00000000         ; Função main()
   38 00000000         Start
   39 00000000         ; Comece o código aqui <================================
                       ======================
   40 00000000         ;{193; 63; 176; 127; 43; 13; 211; 3; 203; 5; 21; 7; 206;



ARM Macro Assembler    Page 2 


                        245; 157; 237; 241; 105; 252; 19},
   41 00000000 4942            LDR              R1,=vet_random
   42 00000002 4A43            LDR              R2,=vet_sort
   43 00000004 F04F 00C1       MOV              R0,#193
   44 00000008 F801 0B04       STRB             R0,[R1],#4
   45 0000000C F04F 003F       MOV              R0,#63
   46 00000010 F801 0B04       STRB             R0,[R1],#4
   47 00000014 F04F 00B0       MOV              R0,#176
   48 00000018 F801 0B04       STRB             R0,[R1],#4
   49 0000001C F04F 007F       MOV              R0,#127
   50 00000020 F801 0B04       STRB             R0,[R1],#4
   51 00000024 F04F 002B       MOV              R0,#43
   52 00000028 F801 0B04       STRB             R0,[R1],#4
   53 0000002C F04F 000D       MOV              R0,#13
   54 00000030 F801 0B04       STRB             R0,[R1],#4
   55 00000034 F04F 00D3       MOV              R0,#211
   56 00000038 F801 0B04       STRB             R0,[R1],#4
   57 0000003C F04F 0003       MOV              R0,#3
   58 00000040 F801 0B04       STRB             R0,[R1],#4
   59 00000044 F04F 00CB       MOV              R0,#203
   60 00000048 F801 0B04       STRB             R0,[R1],#4
   61 0000004C F04F 0005       MOV              R0,#5
   62 00000050 F801 0B04       STRB             R0,[R1],#4
   63 00000054 F04F 0015       MOV              R0,#21
   64 00000058 F801 0B04       STRB             R0,[R1],#4
   65 0000005C F04F 0007       MOV              R0,#7
   66 00000060 F801 0B04       STRB             R0,[R1],#4
   67 00000064 F04F 00CE       MOV              R0,#206
   68 00000068 F801 0B04       STRB             R0,[R1],#4
   69 0000006C F04F 00F5       MOV              R0,#245
   70 00000070 F801 0B04       STRB             R0,[R1],#4
   71 00000074 F04F 009D       MOV              R0,#157
   72 00000078 F801 0B04       STRB             R0,[R1],#4
   73 0000007C F04F 00ED       MOV              R0,#237
   74 00000080 F801 0B04       STRB             R0,[R1],#4
   75 00000084 F04F 00F1       MOV              R0,#241
   76 00000088 F801 0B04       STRB             R0,[R1],#4
   77 0000008C F04F 0069       MOV              R0,#105
   78 00000090 F801 0B04       STRB             R0,[R1],#4
   79 00000094 F04F 00FC       MOV              R0,#252
   80 00000098 F801 0B04       STRB             R0,[R1],#4
   81 0000009C F04F 0013       MOV              R0,#19
   82 000000A0 F801 0B04       STRB             R0,[R1],#4
   83 000000A4         
   84 000000A4 4B19            LDR              R3,=vet_random
   85 000000A6         Proximo
   86 000000A6 428B            CMP              R3,R1
   87 000000A8 D010            BEQ              fimprimo
   88 000000AA F813 5B04       LDRB             R5,[R3],#4
   89 000000AE F04F 0401       MOV              R4,#1
   90 000000B2         Ehprimo
   91 000000B2 F104 0401       ADD              R4,#1
   92 000000B6 42AC            CMP              R4,R5
   93 000000B8 D301            BCC              menor
   94 000000BA F802 5B04       STRB             R5,[R2],#4
   95 000000BE         menor
   96 000000BE FBB5 F7F4       UDIV             R7,R5,R4
   97 000000C2 FB07 5714       MLS              R7,R7,R4,R5
   98 000000C6 2F00            CMP              R7,#0



ARM Macro Assembler    Page 3 


   99 000000C8 D1F3            BNE              Ehprimo
  100 000000CA E7EC            B                Proximo
  101 000000CC         fimprimo
  102 000000CC         ;193,127,43,13,211,3,5,7,151,241,19;
  103 000000CC F1A2 0204       SUB              R2,#4       ;
  104 000000D0 F04F 0A01       MOV              R10,#1
  105 000000D4         loop
  106 000000D4 F1BA 0F01       CMP              R10,#1
  107 000000D8 D117            BNE              ordenado
  108 000000DA F04F 0A00       MOV              R10,#0
  109 000000DE F8DF B030       LDR              R11,=vet_sort
  110 000000E2         for
  111 000000E2 4593            CMP              R11,R2
  112 000000E4 D010            BEQ              fimfor
  113 000000E6 46DC            MOV              R12,R11
  114 000000E8 F10C 0C04       ADD              R12,#4
  115 000000EC F89B 9000       LDRB             R9,[R11]
  116 000000F0 F89C 8000       LDRB             R8,[R12]
  117 000000F4 45C1            CMP              R9,R8
  118 000000F6 D905            BLS              fim
  119 000000F8 F04F 0A01       MOV              R10,#1
  120 000000FC F88C 9000       STRB             R9,[R12]
  121 00000100 F88B 8000       STRB             R8,[R11]
  122 00000104         fim
  123 00000104 46E3            MOV              R11,R12
  124 00000106 E7EC            B                for
  125 00000108         fimfor
  126 00000108 E7E4            B                loop
  127 0000010A         ordenado
  128 0000010A         
  129 0000010A         
  130 0000010A BF00            NOP
  131 0000010C                 ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  132 0000010C                 END                          ; fim do arquivo
              20000400 
              20000500 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\exemplo.d -o.\exemplo.o -IC:\Users\Raissa\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 534" --predefine="TM4C1294NCPDT SETA 1" --l
ist=.\exemplo.lst exemplo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 15 in file exemplo.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 26 in file exemplo.s
   Uses
      None
Comment: .text unused
Ehprimo 000000B2

Symbol: Ehprimo
   Definitions
      At line 90 in file exemplo.s
   Uses
      At line 99 in file exemplo.s
Comment: Ehprimo used once
Proximo 000000A6

Symbol: Proximo
   Definitions
      At line 85 in file exemplo.s
   Uses
      At line 100 in file exemplo.s
Comment: Proximo used once
Start 00000000

Symbol: Start
   Definitions
      At line 38 in file exemplo.s
   Uses
      At line 29 in file exemplo.s
Comment: Start used once
fim 00000104

Symbol: fim
   Definitions
      At line 122 in file exemplo.s
   Uses
      At line 118 in file exemplo.s
Comment: fim used once
fimfor 00000108

Symbol: fimfor
   Definitions
      At line 125 in file exemplo.s
   Uses
      At line 112 in file exemplo.s
Comment: fimfor used once
fimprimo 000000CC

Symbol: fimprimo
   Definitions
      At line 101 in file exemplo.s
   Uses
      At line 87 in file exemplo.s
Comment: fimprimo used once
for 000000E2

Symbol: for



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 110 in file exemplo.s
   Uses
      At line 124 in file exemplo.s
Comment: for used once
loop 000000D4

Symbol: loop
   Definitions
      At line 105 in file exemplo.s
   Uses
      At line 126 in file exemplo.s
Comment: loop used once
menor 000000BE

Symbol: menor
   Definitions
      At line 95 in file exemplo.s
   Uses
      At line 93 in file exemplo.s
Comment: menor used once
ordenado 0000010A

Symbol: ordenado
   Definitions
      At line 127 in file exemplo.s
   Uses
      At line 107 in file exemplo.s
Comment: ordenado used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

vet_random 20000400

Symbol: vet_random
   Definitions
      At line 11 in file exemplo.s
   Uses
      At line 41 in file exemplo.s
      At line 84 in file exemplo.s

vet_sort 20000500

Symbol: vet_sort
   Definitions
      At line 12 in file exemplo.s
   Uses
      At line 42 in file exemplo.s
      At line 109 in file exemplo.s

2 symbols
350 symbols in table
