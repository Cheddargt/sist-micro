


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000         ; ------------------------------------------------------
                       -------------------------
   17 00000000         ; Área de Dados - Declarações de variáveis
   18 00000000                 AREA             DATA, ALIGN=2
   19 00000000         ; Se alguma variável for chamada em outro arquivo
   20 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   21 00000000         ; partir de outro arquivo
   22 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   23 00000000         ; de <tam> bytes a partir da primeira 
   24 00000000         ; posição da RAM  
   25 00000000         
   26 00000000         ; ------------------------------------------------------
                       -------------------------
   27 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   28 00000000         ;                  código
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000         
   31 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   32 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   33 00000000         ; outro arquivo. No caso startup.s
   34 00000000         
   35 00000000         ; Se chamar alguma função externa 
   36 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   37 00000000         ; função <func>
   38 00000000                 IMPORT           PLL_Init
   39 00000000                 IMPORT           SysTick_Init
   40 00000000                 IMPORT           SysTick_Wait1ms
   41 00000000                 IMPORT           GPIO_Init
   42 00000000                 IMPORT           PortB_Output
   43 00000000                 IMPORT           PortJ_Input
   44 00000000                 IMPORT           PortP_Output



ARM Macro Assembler    Page 2 


   45 00000000                 IMPORT           PortA_Output
   46 00000000                 IMPORT           PortQ_Output
   47 00000000         
   48 00000000         
   49 00000000         ; ------------------------------------------------------
                       -------------------------
   50 00000000         ; Função main()
   51 00000000         Start
   52 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   53 00000004 F7FF FFFE       BL               SysTick_Init
   54 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   55 0000000C F04F 0100       MOV              R1,#0       ;Iterador do for ex
                                                            terno DISPLAY
   56 00000010 F04F 0200       MOV              R2,#0       ;Iterador do for in
                                                            terno do DISPLAY
   57 00000014 F04F 0500       MOV              R5,#0       ; Passeio do cavale
                                                            iro
   58 00000018 F04F 0600       MOV              R6,#0
   59 0000001C F04F 0700       MOV              R7,#0       ;Delay
   60 00000020         
   61 00000020         MainLoop
   62 00000020         ; BL Verifica_Chaves
   63 00000020 F000 F801       BL               Acende_LEDS
   64 00000024         ;BL Espera
   65 00000024 E7FC            B                MainLoop    ;Volta para o laço 
                                                            principal 
   66 00000026         
   67 00000026         
   68 00000026         ; ------------------------------------------------------
                       -------------------------
   69 00000026         ; Função que verifica chaves e muda operação e delay
   70 00000026         ;Verifica_Chaves
   71 00000026         ; PUSH {LR}
   72 00000026         ; BL PortJ_Input 
   73 00000026         ;
   74 00000026         ; CMP R0, #2_00000010    ;Verifica se somente a chave SW
                       1 está pressionada
   75 00000026         ; BNE Verifica_S2        ;Se o teste falhou, pula
   76 00000026         ;
   77 00000026         ; CMP R4,#0      ;Muda modo de Operação
   78 00000026         ; ITE EQ
   79 00000026         ;  MOVEQ R4,#1
   80 00000026         ;  MOVNE R4,#0
   81 00000026         ; B fim
   82 00000026         ;Verifica_S2
   83 00000026         ; CMP R0, #2_00000001    ;Muda delay
   84 00000026         ; BNE fim 
   85 00000026         ; CMP R7,#3
   86 00000026         ; ITE NE
   87 00000026         ;  ADDNE R7,#1
   88 00000026         ;  MOVEQ R7,#0
   89 00000026         ;fim
   90 00000026         ; MOV R0, #100               ;Chamar a rotina para esper
                       ar 0,1



ARM Macro Assembler    Page 3 


   91 00000026         ; BL SysTick_Wait1ms
   92 00000026         ;nenhumaPressionada
   93 00000026         ; BL PortJ_Input 
   94 00000026         ; CMP R0, #2_11
   95 00000026         ; BNE nenhumaPressionada
   96 00000026         ; POP {LR}
   97 00000026         ; BX LR
   98 00000026         
   99 00000026         
  100 00000026         ; ------------------------------------------------------
                       -------------------------
  101 00000026         ; Função que verifica modo de operação e acende os LEDs
  102 00000026         Acende_LEDS
  103 00000026 B500            PUSH             {LR}
  104 00000028         
  105 00000028         ; CMP R4,#0     ;Verifica Modo
  106 00000028         ; BNE counter    ;Pula pro contador
  107 00000028         
  108 00000028         ;Cavaleiro 
  109 00000028         ;CMP R5,#0    ;Passeio do cavaleiro
  110 00000028         ;BEQ LED1
  111 00000028         ;CMP R5,#1
  112 00000028         ;BEQ LED2
  113 00000028         ;CMP R5,#2
  114 00000028         ;BEQ LED3
  115 00000028         ;CMP R5,#3
  116 00000028         ;BEQ LED4
  117 00000028         ;CMP R5,#4
  118 00000028         ;BEQ LED5
  119 00000028         ;CMP R5,#5
  120 00000028         ;BEQ LED6
  121 00000028         ;CMP R5,#6
  122 00000028         ;BEQ LED7
  123 00000028         ;CMP R5,#7
  124 00000028         ;BEQ LED8
  125 00000028         ;CMP R5,#8
  126 00000028         ;BEQ LED7
  127 00000028         ;CMP R5,#9
  128 00000028         ;BEQ LED6
  129 00000028         ;CMP R5,#10
  130 00000028         ;BEQ LED5
  131 00000028         ;CMP R5,#11
  132 00000028         ;BEQ LED4
  133 00000028         ;CMP R5,#12
  134 00000028         ;BEQ LED3
  135 00000028         ;CMP R5,#13
  136 00000028         ;BEQ LED2
  137 00000028         ;LED1
  138 00000028         ;MOV R0, #2_0001
  139 00000028         ;BL PortQ_Output
  140 00000028         ;MOV R0, #2_0000
  141 00000028         ;BL PortA_Output
  142 00000028         ;MOV R0, #2_100000
  143 00000028         ;BL PortP_Output
  144 00000028         ;B fim3
  145 00000028         ;LED2
  146 00000028         ;MOV R0, #2_0010
  147 00000028         ;BL PortQ_Output
  148 00000028         ;MOV R0, #2_0000



ARM Macro Assembler    Page 4 


  149 00000028         ;BL PortA_Output
  150 00000028         ;MOV R0, #2_100000
  151 00000028         ;BL PortP_Output
  152 00000028         ;B fim3
  153 00000028         ;LED3
  154 00000028         ;MOV R0, #2_0100
  155 00000028         ;BL PortQ_Output
  156 00000028         ;MOV R0, #2_0000
  157 00000028         ;BL PortA_Output
  158 00000028         ;MOV R0, #2_100000
  159 00000028         ;BL PortP_Output
  160 00000028         ;B fim3
  161 00000028         ;LED4
  162 00000028         ;MOV R0, #2_1000
  163 00000028         ;BL PortQ_Output
  164 00000028         ;MOV R0, #2_0000
  165 00000028         ;BL PortA_Output
  166 00000028         ;MOV R0, #2_100000
  167 00000028         ;BL PortP_Output
  168 00000028         ;B fim3
  169 00000028         
  170 00000028         ;LED5
  171 00000028         ;MOV R0, #2_0000
  172 00000028         ;BL PortQ_Output
  173 00000028         ;MOV R0, #2_00010000
  174 00000028         ;BL PortA_Output
  175 00000028         ;MOV R0, #2_100000
  176 00000028         ;BL PortP_Output
  177 00000028         ;B fim3
  178 00000028         
  179 00000028         ;LED6
  180 00000028         ;MOV R0, #2_0000
  181 00000028         ;BL PortQ_Output
  182 00000028         ;MOV R0, #2_00100000
  183 00000028         ;BL PortA_Output
  184 00000028         ;MOV R0, #2_100000
  185 00000028         ;BL PortP_Output
  186 00000028         ;B fim3
  187 00000028         
  188 00000028         ;LED7
  189 00000028         ;MOV R0, #2_0000
  190 00000028         ;BL PortQ_Output
  191 00000028         ;MOV R0, #2_01000000
  192 00000028         ;BL PortA_Output
  193 00000028         ;MOV R0, #2_100000
  194 00000028         ;BL PortP_Output
  195 00000028         ;B fim3
  196 00000028         
  197 00000028         ;LED8
  198 00000028         ;MOV R0, #2_0000
  199 00000028         ;BL PortQ_Output
  200 00000028         ;MOV R0, #2_10000000
  201 00000028         ;BL PortA_Output
  202 00000028         ;MOV R0, #2_100000
  203 00000028         ;BL PortP_Output
  204 00000028         ;B fim3
  205 00000028         
  206 00000028         
  207 00000028         



ARM Macro Assembler    Page 5 


  208 00000028         ;counter
  209 00000028         ;MOV R3, #0 ;Iterador do for externo
  210 00000028         
  211 00000028         ;forexterno
  212 00000028         ;CMP R3, #9
  213 00000028         ;BCS fim2
  214 00000028         
  215 00000028         
  216 00000028 F04F 0600       MOV              R6, #0      ;Iterador do for in
                                                            terno
  217 0000002C         
  218 0000002C         forinterno
  219 0000002C         
  220 0000002C         ;Resetar o carry
  221 0000002C F04F 0801       MOV              R8, #1
  222 00000030 F1B8 0F02       CMP              R8, #2
  223 00000034         
  224 00000034         ;Compara
  225 00000034 2E00            CMP              R6,#0
  226 00000036 D011            BEQ              D00
  227 00000038 2E01            CMP              R6,#1
  228 0000003A D01C            BEQ              D01
  229 0000003C 2E02            CMP              R6,#2
  230 0000003E D027            BEQ              D02
  231 00000040 2E03            CMP              R6,#3
  232 00000042 D032            BEQ              D03
  233 00000044 2E04            CMP              R6,#4
  234 00000046 D03D            BEQ              D04
  235 00000048 2E05            CMP              R6,#5
  236 0000004A D048            BEQ              D05
  237 0000004C 2E06            CMP              R6,#6
  238 0000004E D053            BEQ              D06
  239 00000050 2E07            CMP              R6,#7
  240 00000052 D05E            BEQ              D07
  241 00000054 2E08            CMP              R6,#8
  242 00000056 D069            BEQ              D08
  243 00000058 2E09            CMP              R6,#9
  244 0000005A D074            BEQ              D09
  245 0000005C         
  246 0000005C         D00
  247 0000005C F04F 000F       MOV              R0, #2_1111
  248 00000060 F7FF FFFE       BL               PortQ_Output
  249 00000064 F04F 0030       MOV              R0, #2_00110000
  250 00000068 F7FF FFFE       BL               PortA_Output
  251 0000006C F04F 0020       MOV              R0, #2_100000
  252 00000070 F7FF FFFE       BL               PortB_Output
  253 00000074 E074            B                voltainterno
  254 00000076         
  255 00000076         D01
  256 00000076 F04F 0006       MOV              R0, #2_0110
  257 0000007A F7FF FFFE       BL               PortQ_Output
  258 0000007E F04F 0000       MOV              R0, #2_00000000
  259 00000082 F7FF FFFE       BL               PortA_Output
  260 00000086 F04F 0020       MOV              R0, #2_100000
  261 0000008A F7FF FFFE       BL               PortB_Output
  262 0000008E E067            B                voltainterno
  263 00000090         
  264 00000090         D02
  265 00000090 F04F 000B       MOV              R0, #2_1011



ARM Macro Assembler    Page 6 


  266 00000094 F7FF FFFE       BL               PortQ_Output
  267 00000098 F04F 0050       MOV              R0, #2_01010000
  268 0000009C F7FF FFFE       BL               PortA_Output
  269 000000A0 F04F 0020       MOV              R0, #2_100000
  270 000000A4 F7FF FFFE       BL               PortB_Output
  271 000000A8 E05A            B                voltainterno
  272 000000AA         
  273 000000AA         D03
  274 000000AA F04F 000F       MOV              R0, #2_1111
  275 000000AE F7FF FFFE       BL               PortQ_Output
  276 000000B2 F04F 0040       MOV              R0, #2_01000000
  277 000000B6 F7FF FFFE       BL               PortA_Output
  278 000000BA F04F 0020       MOV              R0, #2_100000
  279 000000BE F7FF FFFE       BL               PortB_Output
  280 000000C2 E04D            B                voltainterno
  281 000000C4         
  282 000000C4         D04
  283 000000C4 F04F 0006       MOV              R0, #2_00000110
  284 000000C8 F7FF FFFE       BL               PortQ_Output
  285 000000CC F04F 0060       MOV              R0, #2_01100000
  286 000000D0 F7FF FFFE       BL               PortA_Output
  287 000000D4 F04F 0020       MOV              R0, #2_100000
  288 000000D8 F7FF FFFE       BL               PortB_Output
  289 000000DC E040            B                voltainterno
  290 000000DE         
  291 000000DE         D05
  292 000000DE F04F 000D       MOV              R0, #2_00001101
  293 000000E2 F7FF FFFE       BL               PortQ_Output
  294 000000E6 F04F 0060       MOV              R0, #2_01100000
  295 000000EA F7FF FFFE       BL               PortA_Output
  296 000000EE F04F 0060       MOV              R0, #2_01100000
  297 000000F2 F7FF FFFE       BL               PortB_Output
  298 000000F6 E033            B                voltainterno
  299 000000F8         
  300 000000F8         D06
  301 000000F8 F04F 000D       MOV              R0, #2_00001101
  302 000000FC F7FF FFFE       BL               PortQ_Output
  303 00000100 F04F 0070       MOV              R0, #2_01110000
  304 00000104 F7FF FFFE       BL               PortA_Output
  305 00000108 F04F 0060       MOV              R0, #2_01100000
  306 0000010C F7FF FFFE       BL               PortB_Output
  307 00000110 E026            B                voltainterno
  308 00000112         
  309 00000112         D07
  310 00000112 F04F 0007       MOV              R0, #2_00000111
  311 00000116 F7FF FFFE       BL               PortQ_Output
  312 0000011A F04F 0000       MOV              R0, #2_00000000
  313 0000011E F7FF FFFE       BL               PortA_Output
  314 00000122 F04F 0020       MOV              R0, #2_100000
  315 00000126 F7FF FFFE       BL               PortB_Output
  316 0000012A E019            B                voltainterno
  317 0000012C         
  318 0000012C         D08
  319 0000012C F04F 000F       MOV              R0, #2_00001111
  320 00000130 F7FF FFFE       BL               PortQ_Output
  321 00000134 F04F 0070       MOV              R0, #2_01110000
  322 00000138 F7FF FFFE       BL               PortA_Output
  323 0000013C F04F 0020       MOV              R0, #2_100000
  324 00000140 F7FF FFFE       BL               PortB_Output



ARM Macro Assembler    Page 7 


  325 00000144 E00C            B                voltainterno
  326 00000146         
  327 00000146         D09
  328 00000146 F04F 000F       MOV              R0, #2_00001111
  329 0000014A F7FF FFFE       BL               PortQ_Output
  330 0000014E F04F 0060       MOV              R0, #2_01100000
  331 00000152 F7FF FFFE       BL               PortA_Output
  332 00000156 F04F 0020       MOV              R0, #2_100000
  333 0000015A F7FF FFFE       BL               PortB_Output
  334 0000015E E7FF            B                voltainterno
  335 00000160         
  336 00000160         
  337 00000160         
  338 00000160         
  339 00000160         voltainterno
  340 00000160 F44F 70FA       MOV              R0, #500
  341 00000164 F7FF FFFE       BL               SysTick_Wait1ms
  342 00000168 F85D EB04       POP              {LR}
  343 0000016C F106 0601       ADD              R6, R6, #1  ;for interno
  344 00000170 2E0A            CMP              R6, #10
  345 00000172 F4FF AF5B       BCC              forinterno
  346 00000176         ;ITT CS
  347 00000176         ;ADDCS R3, R3, #1
  348 00000176         ;BCS forexterno
  349 00000176         
  350 00000176         
  351 00000176         
  352 00000176         ;fim2
  353 00000176         ;CMP R6,#15
  354 00000176         ;ITE EQ
  355 00000176         ;MOVEQ R6,#0
  356 00000176         ;ADDNE R6,#1
  357 00000176         ;MOV R0, #1000                ;Chamar a rotina para espe
                       rar 1s
  358 00000176         ;BL SysTick_Wait1ms
  359 00000176         ;POP {LR}
  360 00000176         ;BX LR
  361 00000176         
  362 00000176         ;fim3
  363 00000176         ;PUSH {LR}
  364 00000176         ; CMP R5,#13
  365 00000176         ; ITE EQ
  366 00000176         ;  MOVEQ R5,#0
  367 00000176         ;  ADDNE R5,#1
  368 00000176         ; MOV R0, #500                ;Chamar a rotina para espe
                       rar 1s
  369 00000176         ; BL SysTick_Wait1ms
  370 00000176         ; POP {LR}
  371 00000176         ; BX LR
  372 00000176         ;
  373 00000176         ; ------------------------------------------------------
                       -------------------------
  374 00000176         
  375 00000176         ; ------------------------------------------------------
                       -------------------------
  376 00000176         ;Função de Espera
  377 00000176         ;Espera
  378 00000176         ; PUSH {LR}
  379 00000176         ; CMP R7,#0     ;Verifica a velocidade  e pula



ARM Macro Assembler    Page 8 


  380 00000176         ; BEQ t1
  381 00000176         ; CMP R7,#1
  382 00000176         ; BEQ t2
  383 00000176         ; CMP R7,#2
  384 00000176         ; BEQ t3
  385 00000176         ;t1
  386 00000176         ; MOV R0, #1000                ;Chamar a rotina para esp
                       erar 1s
  387 00000176         ; BL SysTick_Wait1ms
  388 00000176         ; B final
  389 00000176         ;t2 
  390 00000176         ; MOV R0, #500                ;Chamar a rotina para espe
                       rar 0,5s
  391 00000176         ; BL SysTick_Wait1ms
  392 00000176         ; B final
  393 00000176         ;t3 
  394 00000176         ; MOV R0, #200               ;Chamar a rotina para esper
                       ar 0,2s
  395 00000176         ; BL SysTick_Wait1ms
  396 00000176         ;final 
  397 00000176         ; POP {LR}
  398 00000176         ; BX LR
  399 00000176         
  400 00000176         
  401 00000176 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  402 00000178                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\DAELN\Downloads\
GustavoZeni_IancaPolizelo_Lab1\RTE -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\De
vice\Include\TM4C129 -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 518" --predefine="TM4C1294NCPDT SETA 1" --
list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: .text unused
Acende_LEDS 00000026

Symbol: Acende_LEDS
   Definitions
      At line 102 in file main.s
   Uses
      At line 63 in file main.s
Comment: Acende_LEDS used once
D00 0000005C

Symbol: D00
   Definitions
      At line 246 in file main.s
   Uses
      At line 226 in file main.s
Comment: D00 used once
D01 00000076

Symbol: D01
   Definitions
      At line 255 in file main.s
   Uses
      At line 228 in file main.s
Comment: D01 used once
D02 00000090

Symbol: D02
   Definitions
      At line 264 in file main.s
   Uses
      At line 230 in file main.s
Comment: D02 used once
D03 000000AA

Symbol: D03
   Definitions
      At line 273 in file main.s
   Uses
      At line 232 in file main.s
Comment: D03 used once
D04 000000C4

Symbol: D04
   Definitions
      At line 282 in file main.s
   Uses
      At line 234 in file main.s
Comment: D04 used once
D05 000000DE

Symbol: D05



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 291 in file main.s
   Uses
      At line 236 in file main.s
Comment: D05 used once
D06 000000F8

Symbol: D06
   Definitions
      At line 300 in file main.s
   Uses
      At line 238 in file main.s
Comment: D06 used once
D07 00000112

Symbol: D07
   Definitions
      At line 309 in file main.s
   Uses
      At line 240 in file main.s
Comment: D07 used once
D08 0000012C

Symbol: D08
   Definitions
      At line 318 in file main.s
   Uses
      At line 242 in file main.s
Comment: D08 used once
D09 00000146

Symbol: D09
   Definitions
      At line 327 in file main.s
   Uses
      At line 244 in file main.s
Comment: D09 used once
MainLoop 00000020

Symbol: MainLoop
   Definitions
      At line 61 in file main.s
   Uses
      At line 65 in file main.s
Comment: MainLoop used once
Start 00000000

Symbol: Start
   Definitions
      At line 51 in file main.s
   Uses
      At line 32 in file main.s
Comment: Start used once
forinterno 0000002C

Symbol: forinterno
   Definitions
      At line 218 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 345 in file main.s
Comment: forinterno used once
voltainterno 00000160

Symbol: voltainterno
   Definitions
      At line 339 in file main.s
   Uses
      At line 253 in file main.s
      At line 262 in file main.s
      At line 271 in file main.s
      At line 280 in file main.s
      At line 289 in file main.s
      At line 298 in file main.s
      At line 307 in file main.s
      At line 316 in file main.s
      At line 325 in file main.s
      At line 334 in file main.s

16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 54 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 38 in file main.s
   Uses
      At line 52 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 45 in file main.s
   Uses
      At line 250 in file main.s
      At line 259 in file main.s
      At line 268 in file main.s
      At line 277 in file main.s
      At line 286 in file main.s
      At line 295 in file main.s
      At line 304 in file main.s
      At line 313 in file main.s
      At line 322 in file main.s
      At line 331 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 42 in file main.s
   Uses
      At line 252 in file main.s
      At line 261 in file main.s
      At line 270 in file main.s
      At line 279 in file main.s
      At line 288 in file main.s
      At line 297 in file main.s
      At line 306 in file main.s
      At line 315 in file main.s
      At line 324 in file main.s
      At line 333 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortP_Output 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: PortP_Output
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: PortP_Output unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 46 in file main.s
   Uses
      At line 248 in file main.s
      At line 257 in file main.s
      At line 266 in file main.s
      At line 275 in file main.s
      At line 284 in file main.s
      At line 293 in file main.s
      At line 302 in file main.s
      At line 311 in file main.s
      At line 320 in file main.s
      At line 329 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 53 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 40 in file main.s
   Uses
      At line 341 in file main.s
Comment: SysTick_Wait1ms used once
9 symbols
360 symbols in table
