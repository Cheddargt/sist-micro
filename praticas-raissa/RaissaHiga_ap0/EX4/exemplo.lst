


ARM Macro Assembler    Page 1 


    1 00000000         ; Exemplo.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 12/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Área de Dados - Declarações de variáveis
   13 00000000                 AREA             DATA, ALIGN=2
   14 00000000         ; Se alguma variável for chamada em outro arquivo
   15 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   16 00000000         ; partir de outro arquivo
   17 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   18 00000000         ; de <tam> bytes a partir da primeira 
   19 00000000         ; posição da RAM  
   20 00000000         
   21 00000000         ; ------------------------------------------------------
                       -------------------------
   22 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   23 00000000         ;                  código
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000         
   26 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   27 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   28 00000000         ; outro arquivo. No caso startup.s
   29 00000000         
   30 00000000         ; Se chamar alguma função externa 
   31 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   32 00000000         ; função <func>
   33 00000000         
   34 00000000         ; ------------------------------------------------------
                       -------------------------
   35 00000000         ; Função main()
   36 00000000         Start
   37 00000000         ; Comece o código aqui <================================
                       ======================
   38 00000000 F04F 0065       MOV              R0,#101
   39 00000004 30FD            ADDS             R0,#253
   40 00000006 F649 615F       MOV              R1,#40543
   41 0000000A F201 51DC       ADD              R1,#1500
   42 0000000E F44F 72AA       MOV              R2,#340
   43 00000012 3A7B            SUBS             R2,#123
   44 00000014 F44F 737A       MOV              R3,#1000



ARM Macro Assembler    Page 2 


   45 00000018 F5B3 63FA       SUBS             R3,#2000
   46 0000001C F24D 446A       MOV              R4,#54378
   47 00000020 F04F 0504       MOV              R5,#4
   48 00000024 FB04 F405       MUL              R4,R4,R5
   49 00000028 F243 3644       MOV              R6,#0x3344
   50 0000002C F2C1 1622       MOVT             R6,#0x1122
   51 00000030         
   52 00000030 F242 2711       MOV              R7,#0x2211
   53 00000034 F2C4 4733       MOVT             R7,#0x4433
   54 00000038         
   55 00000038 FBA6 8907       UMULL            R8,R9,R6,R7
   56 0000003C         
   57 0000003C F247 5A60       MOV              R10,#0x7560
   58 00000040 F6CF 7AFF       MOVT             R10,#0xFFFF
   59 00000044         
   60 00000044 F44F 7B7A       MOV              R11,#1000
   61 00000048         
   62 00000048 FB9A FCFB       SDIV             R12,R10,R11
   63 0000004C FBBA FAFB       UDIV             R10,R11
   64 00000050         
   65 00000050         
   66 00000050 BF00            NOP
   67 00000052 00 00           ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
   68 00000054                 END                          ; fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\exemplo.d -o.\exemplo.o -IC:\Users\Raissa\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 534" --predefine="TM4C1294NCPDT SETA 1" --l
ist=.\exemplo.lst exemplo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 13 in file exemplo.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file exemplo.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 36 in file exemplo.s
   Uses
      At line 27 in file exemplo.s
Comment: Start used once
2 symbols
337 symbols in table
